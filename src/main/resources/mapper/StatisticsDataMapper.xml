<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lzz.spirngboot_kafka_demo.domain.mapper.StatisticsDataMapper">
  <resultMap id="BaseResultMap" type="com.lzz.spirngboot_kafka_demo.domain.entity.StatisticsData">
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="radar_id" jdbcType="VARCHAR" property="radarId" />
    <result column="position" jdbcType="DOUBLE" property="position" />
    <result column="direction" jdbcType="VARCHAR" property="direction" />
    <result column="lane_num" jdbcType="INTEGER" property="laneNum" />
    <result column="cycle" jdbcType="BIGINT" property="cycle" />
    <result column="sum_car" jdbcType="INTEGER" property="sumCar" />
    <result column="sum_small_car" jdbcType="INTEGER" property="sumSmallCar" />
    <result column="sum_mid_car" jdbcType="INTEGER" property="sumMidCar" />
    <result column="sum_big_car" jdbcType="INTEGER" property="sumBigCar" />
    <result column="avg_speed" jdbcType="DOUBLE" property="avgSpeed" />
    <result column="sum_target" jdbcType="INTEGER" property="sumTarget" />
    <result column="sum_speed" jdbcType="DOUBLE" property="sumSpeed" />
    <result column="avg_small_speed" jdbcType="DOUBLE" property="avgSmallSpeed" />
    <result column="sum_small_target" jdbcType="INTEGER" property="sumSmallTarget" />
    <result column="sum_small_speed" jdbcType="DOUBLE" property="sumSmallSpeed" />
    <result column="avg_mid_speed" jdbcType="DOUBLE" property="avgMidSpeed" />
    <result column="sum_mid_target" jdbcType="INTEGER" property="sumMidTarget" />
    <result column="sum_mid_speed" jdbcType="DOUBLE" property="sumMidSpeed" />
    <result column="avg_big_speed" jdbcType="DOUBLE" property="avgBigSpeed" />
    <result column="sum_big_target" jdbcType="INTEGER" property="sumBigTarget" />
    <result column="sum_big_speed" jdbcType="DOUBLE" property="sumBigSpeed" />
    <result column="occupancy" jdbcType="DOUBLE" property="occupancy" />
    <result column="headway" jdbcType="DOUBLE" property="headway" />
    <result column="gap" jdbcType="DOUBLE" property="gap" />
    <result column="speed_85" jdbcType="DOUBLE" property="speed85" />
    <result column="sum_event" jdbcType="INTEGER" property="sumEvent" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, radar_id, position, direction, lane_num, cycle, sum_car, sum_small_car, sum_mid_car, 
    sum_big_car, avg_speed, sum_target, sum_speed, avg_small_speed, sum_small_target, 
    sum_small_speed, avg_mid_speed, sum_mid_target, sum_mid_speed, avg_big_speed, sum_big_target, 
    sum_big_speed, occupancy, headway, gap, speed_85, sum_event, create_time
  </sql>
  <select id="selectByExample" parameterType="com.lzz.spirngboot_kafka_demo.domain.entity.StatisticsDataExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from statistics_data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.lzz.spirngboot_kafka_demo.domain.entity.StatisticsDataExample">
    delete from statistics_data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lzz.spirngboot_kafka_demo.domain.entity.StatisticsData">
    insert into statistics_data (id, radar_id, position, 
      direction, lane_num, cycle, 
      sum_car, sum_small_car, sum_mid_car, 
      sum_big_car, avg_speed, sum_target, 
      sum_speed, avg_small_speed, sum_small_target, 
      sum_small_speed, avg_mid_speed, sum_mid_target, 
      sum_mid_speed, avg_big_speed, sum_big_target, 
      sum_big_speed, occupancy, headway, 
      gap, speed_85, sum_event, 
      create_time)
    values (#{id,jdbcType=BIGINT}, #{radarId,jdbcType=VARCHAR}, #{position,jdbcType=DOUBLE}, 
      #{direction,jdbcType=VARCHAR}, #{laneNum,jdbcType=INTEGER}, #{cycle,jdbcType=BIGINT}, 
      #{sumCar,jdbcType=INTEGER}, #{sumSmallCar,jdbcType=INTEGER}, #{sumMidCar,jdbcType=INTEGER}, 
      #{sumBigCar,jdbcType=INTEGER}, #{avgSpeed,jdbcType=DOUBLE}, #{sumTarget,jdbcType=INTEGER}, 
      #{sumSpeed,jdbcType=DOUBLE}, #{avgSmallSpeed,jdbcType=DOUBLE}, #{sumSmallTarget,jdbcType=INTEGER}, 
      #{sumSmallSpeed,jdbcType=DOUBLE}, #{avgMidSpeed,jdbcType=DOUBLE}, #{sumMidTarget,jdbcType=INTEGER}, 
      #{sumMidSpeed,jdbcType=DOUBLE}, #{avgBigSpeed,jdbcType=DOUBLE}, #{sumBigTarget,jdbcType=INTEGER}, 
      #{sumBigSpeed,jdbcType=DOUBLE}, #{occupancy,jdbcType=DOUBLE}, #{headway,jdbcType=DOUBLE}, 
      #{gap,jdbcType=DOUBLE}, #{speed85,jdbcType=DOUBLE}, #{sumEvent,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.lzz.spirngboot_kafka_demo.domain.entity.StatisticsData">
    insert into statistics_data
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="radarId != null">
        radar_id,
      </if>
      <if test="position != null">
        position,
      </if>
      <if test="direction != null">
        direction,
      </if>
      <if test="laneNum != null">
        lane_num,
      </if>
      <if test="cycle != null">
        cycle,
      </if>
      <if test="sumCar != null">
        sum_car,
      </if>
      <if test="sumSmallCar != null">
        sum_small_car,
      </if>
      <if test="sumMidCar != null">
        sum_mid_car,
      </if>
      <if test="sumBigCar != null">
        sum_big_car,
      </if>
      <if test="avgSpeed != null">
        avg_speed,
      </if>
      <if test="sumTarget != null">
        sum_target,
      </if>
      <if test="sumSpeed != null">
        sum_speed,
      </if>
      <if test="avgSmallSpeed != null">
        avg_small_speed,
      </if>
      <if test="sumSmallTarget != null">
        sum_small_target,
      </if>
      <if test="sumSmallSpeed != null">
        sum_small_speed,
      </if>
      <if test="avgMidSpeed != null">
        avg_mid_speed,
      </if>
      <if test="sumMidTarget != null">
        sum_mid_target,
      </if>
      <if test="sumMidSpeed != null">
        sum_mid_speed,
      </if>
      <if test="avgBigSpeed != null">
        avg_big_speed,
      </if>
      <if test="sumBigTarget != null">
        sum_big_target,
      </if>
      <if test="sumBigSpeed != null">
        sum_big_speed,
      </if>
      <if test="occupancy != null">
        occupancy,
      </if>
      <if test="headway != null">
        headway,
      </if>
      <if test="gap != null">
        gap,
      </if>
      <if test="speed85 != null">
        speed_85,
      </if>
      <if test="sumEvent != null">
        sum_event,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="radarId != null">
        #{radarId,jdbcType=VARCHAR},
      </if>
      <if test="position != null">
        #{position,jdbcType=DOUBLE},
      </if>
      <if test="direction != null">
        #{direction,jdbcType=VARCHAR},
      </if>
      <if test="laneNum != null">
        #{laneNum,jdbcType=INTEGER},
      </if>
      <if test="cycle != null">
        #{cycle,jdbcType=BIGINT},
      </if>
      <if test="sumCar != null">
        #{sumCar,jdbcType=INTEGER},
      </if>
      <if test="sumSmallCar != null">
        #{sumSmallCar,jdbcType=INTEGER},
      </if>
      <if test="sumMidCar != null">
        #{sumMidCar,jdbcType=INTEGER},
      </if>
      <if test="sumBigCar != null">
        #{sumBigCar,jdbcType=INTEGER},
      </if>
      <if test="avgSpeed != null">
        #{avgSpeed,jdbcType=DOUBLE},
      </if>
      <if test="sumTarget != null">
        #{sumTarget,jdbcType=INTEGER},
      </if>
      <if test="sumSpeed != null">
        #{sumSpeed,jdbcType=DOUBLE},
      </if>
      <if test="avgSmallSpeed != null">
        #{avgSmallSpeed,jdbcType=DOUBLE},
      </if>
      <if test="sumSmallTarget != null">
        #{sumSmallTarget,jdbcType=INTEGER},
      </if>
      <if test="sumSmallSpeed != null">
        #{sumSmallSpeed,jdbcType=DOUBLE},
      </if>
      <if test="avgMidSpeed != null">
        #{avgMidSpeed,jdbcType=DOUBLE},
      </if>
      <if test="sumMidTarget != null">
        #{sumMidTarget,jdbcType=INTEGER},
      </if>
      <if test="sumMidSpeed != null">
        #{sumMidSpeed,jdbcType=DOUBLE},
      </if>
      <if test="avgBigSpeed != null">
        #{avgBigSpeed,jdbcType=DOUBLE},
      </if>
      <if test="sumBigTarget != null">
        #{sumBigTarget,jdbcType=INTEGER},
      </if>
      <if test="sumBigSpeed != null">
        #{sumBigSpeed,jdbcType=DOUBLE},
      </if>
      <if test="occupancy != null">
        #{occupancy,jdbcType=DOUBLE},
      </if>
      <if test="headway != null">
        #{headway,jdbcType=DOUBLE},
      </if>
      <if test="gap != null">
        #{gap,jdbcType=DOUBLE},
      </if>
      <if test="speed85 != null">
        #{speed85,jdbcType=DOUBLE},
      </if>
      <if test="sumEvent != null">
        #{sumEvent,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lzz.spirngboot_kafka_demo.domain.entity.StatisticsDataExample" resultType="java.lang.Long">
    select count(*) from statistics_data
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update statistics_data
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.radarId != null">
        radar_id = #{record.radarId,jdbcType=VARCHAR},
      </if>
      <if test="record.position != null">
        position = #{record.position,jdbcType=DOUBLE},
      </if>
      <if test="record.direction != null">
        direction = #{record.direction,jdbcType=VARCHAR},
      </if>
      <if test="record.laneNum != null">
        lane_num = #{record.laneNum,jdbcType=INTEGER},
      </if>
      <if test="record.cycle != null">
        cycle = #{record.cycle,jdbcType=BIGINT},
      </if>
      <if test="record.sumCar != null">
        sum_car = #{record.sumCar,jdbcType=INTEGER},
      </if>
      <if test="record.sumSmallCar != null">
        sum_small_car = #{record.sumSmallCar,jdbcType=INTEGER},
      </if>
      <if test="record.sumMidCar != null">
        sum_mid_car = #{record.sumMidCar,jdbcType=INTEGER},
      </if>
      <if test="record.sumBigCar != null">
        sum_big_car = #{record.sumBigCar,jdbcType=INTEGER},
      </if>
      <if test="record.avgSpeed != null">
        avg_speed = #{record.avgSpeed,jdbcType=DOUBLE},
      </if>
      <if test="record.sumTarget != null">
        sum_target = #{record.sumTarget,jdbcType=INTEGER},
      </if>
      <if test="record.sumSpeed != null">
        sum_speed = #{record.sumSpeed,jdbcType=DOUBLE},
      </if>
      <if test="record.avgSmallSpeed != null">
        avg_small_speed = #{record.avgSmallSpeed,jdbcType=DOUBLE},
      </if>
      <if test="record.sumSmallTarget != null">
        sum_small_target = #{record.sumSmallTarget,jdbcType=INTEGER},
      </if>
      <if test="record.sumSmallSpeed != null">
        sum_small_speed = #{record.sumSmallSpeed,jdbcType=DOUBLE},
      </if>
      <if test="record.avgMidSpeed != null">
        avg_mid_speed = #{record.avgMidSpeed,jdbcType=DOUBLE},
      </if>
      <if test="record.sumMidTarget != null">
        sum_mid_target = #{record.sumMidTarget,jdbcType=INTEGER},
      </if>
      <if test="record.sumMidSpeed != null">
        sum_mid_speed = #{record.sumMidSpeed,jdbcType=DOUBLE},
      </if>
      <if test="record.avgBigSpeed != null">
        avg_big_speed = #{record.avgBigSpeed,jdbcType=DOUBLE},
      </if>
      <if test="record.sumBigTarget != null">
        sum_big_target = #{record.sumBigTarget,jdbcType=INTEGER},
      </if>
      <if test="record.sumBigSpeed != null">
        sum_big_speed = #{record.sumBigSpeed,jdbcType=DOUBLE},
      </if>
      <if test="record.occupancy != null">
        occupancy = #{record.occupancy,jdbcType=DOUBLE},
      </if>
      <if test="record.headway != null">
        headway = #{record.headway,jdbcType=DOUBLE},
      </if>
      <if test="record.gap != null">
        gap = #{record.gap,jdbcType=DOUBLE},
      </if>
      <if test="record.speed85 != null">
        speed_85 = #{record.speed85,jdbcType=DOUBLE},
      </if>
      <if test="record.sumEvent != null">
        sum_event = #{record.sumEvent,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update statistics_data
    set id = #{record.id,jdbcType=BIGINT},
      radar_id = #{record.radarId,jdbcType=VARCHAR},
      position = #{record.position,jdbcType=DOUBLE},
      direction = #{record.direction,jdbcType=VARCHAR},
      lane_num = #{record.laneNum,jdbcType=INTEGER},
      cycle = #{record.cycle,jdbcType=BIGINT},
      sum_car = #{record.sumCar,jdbcType=INTEGER},
      sum_small_car = #{record.sumSmallCar,jdbcType=INTEGER},
      sum_mid_car = #{record.sumMidCar,jdbcType=INTEGER},
      sum_big_car = #{record.sumBigCar,jdbcType=INTEGER},
      avg_speed = #{record.avgSpeed,jdbcType=DOUBLE},
      sum_target = #{record.sumTarget,jdbcType=INTEGER},
      sum_speed = #{record.sumSpeed,jdbcType=DOUBLE},
      avg_small_speed = #{record.avgSmallSpeed,jdbcType=DOUBLE},
      sum_small_target = #{record.sumSmallTarget,jdbcType=INTEGER},
      sum_small_speed = #{record.sumSmallSpeed,jdbcType=DOUBLE},
      avg_mid_speed = #{record.avgMidSpeed,jdbcType=DOUBLE},
      sum_mid_target = #{record.sumMidTarget,jdbcType=INTEGER},
      sum_mid_speed = #{record.sumMidSpeed,jdbcType=DOUBLE},
      avg_big_speed = #{record.avgBigSpeed,jdbcType=DOUBLE},
      sum_big_target = #{record.sumBigTarget,jdbcType=INTEGER},
      sum_big_speed = #{record.sumBigSpeed,jdbcType=DOUBLE},
      occupancy = #{record.occupancy,jdbcType=DOUBLE},
      headway = #{record.headway,jdbcType=DOUBLE},
      gap = #{record.gap,jdbcType=DOUBLE},
      speed_85 = #{record.speed85,jdbcType=DOUBLE},
      sum_event = #{record.sumEvent,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>